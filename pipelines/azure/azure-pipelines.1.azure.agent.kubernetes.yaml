# This pipeline requires azure service connection of type "kubernetes service"
name: $(BuildID)
trigger: none
#config
variables:
  cluster_namespace: jmeter
  kubernetesServiceConnection: k8c
  scale_down_replicas: 0
  scale_up_replicas: 2
  scale_up_replicas_master: 1
  service: jmeter-slaves
  scenario: cloudssky.jmx
  service-master: jmeter-master
  report_dir: kubernetes/tmp/report

jobs:
  - job: JMeter_Tests
    displayName: JMeter Tests Regression Pipeline
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 5
    steps:
    - task: KubernetesManifest@0
      displayName: Scale slaves to $(scale_down_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service)
        replicas: $(scale_down_replicas)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale master to $(scale_down_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service-master)
        replicas: $(scale_down_replicas)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale master to $(scale_up_replicas_master)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service-master)
        replicas: $(scale_up_replicas_master)
        namespace: $(cluster_namespace)

    - task: KubernetesManifest@0
      displayName: Scale slaves to $(scale_up_replicas)
      inputs:
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        action: scale
        kind: deployment
        name: $(service)
        replicas: $(scale_up_replicas)
        namespace: $(cluster_namespace)

    - task: Kubernetes@1
      displayName: Login to cluster
      inputs:
        command: login
        connectionType: Kubernetes Service Connection
        kubernetesServiceEndpoint: $(kubernetesServiceConnection)

    - task: ShellScript@2
      displayName: JMeter tests
      inputs:
        scriptPath: kubernetes/bin/start_test_from_script_params.sh
        args: $(cluster_namespace) $(scenario)
    - task: PublishPipelineArtifact@1
      displayName: Archive JMeter Report
      inputs:
        path: $(report_dir)
        artifact: JmeterReport